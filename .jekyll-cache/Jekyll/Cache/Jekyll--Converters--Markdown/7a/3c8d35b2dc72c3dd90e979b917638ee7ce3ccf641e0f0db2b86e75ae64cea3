I"ä<h2 id="tools">Tools</h2>

<p>Here I have listed some Python tools I have developed to improve research efficiency. Please feel free to get in touch if you have any suggestions, or if you found them useful</p>

<h3 id="get-weather-station-data-global">Get <strong>weather station</strong> data (Global)</h3>
<ul>
  <li>Can run from your laptop etc</li>
  <li><a href="https://github.com/scott-hosking/get_station_data">GitHub repo</a></li>
  <li>Notebooks for working with <a href="/notebooks/ghcn_monthly">monthly</a> and <a href="/notebooks/ghcn_daily">daily</a> averaged data</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">get_station_data</span> <span class="kn">import</span> <span class="n">ghcnd</span>
<span class="kn">from</span> <span class="nn">get_station_data.util</span> <span class="kn">import</span> <span class="n">nearest_stn</span>

<span class="c1">### Read station metadata
</span><span class="n">stn_md</span> <span class="o">=</span> <span class="n">ghcnd</span><span class="p">.</span><span class="n">get_stn_metadata</span><span class="p">()</span>

<span class="c1">### Choose a location &amp; number of nearest neighbours
</span><span class="n">lon_lat</span> <span class="o">=</span> <span class="o">-</span><span class="mf">0.1278</span><span class="p">,</span> <span class="mf">51.5074</span> <span class="c1"># i.e., London
</span><span class="n">my_stns</span> <span class="o">=</span> <span class="n">nearest_stn</span><span class="p">(</span><span class="n">stn_md</span><span class="p">,</span> <span class="n">lon_lat</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">lon_lat</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span>
                        <span class="n">n_neighbours</span><span class="o">=</span><span class="mi">5</span> <span class="p">)</span>

<span class="c1">### Download and extract data into a pandas DataFrame
</span><span class="n">df</span> <span class="o">=</span> <span class="n">ghcnd</span><span class="p">.</span><span class="n">get_data</span><span class="p">(</span><span class="n">my_stns</span><span class="p">)</span>
</code></pre></div></div>

<h3 id="get-climate-model-output-cmip56">Get <strong>climate model</strong> output (CMIP5/6)</h3>
<ul>
  <li>Needs to run on systems where data is stored (e.g. <a href="http://www.jasmin.ac.uk/">JASMIN</a>)</li>
  <li><a href="https://github.com/scott-hosking/baspy">GitHub repo</a></li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">baspy</span> <span class="k">as</span> <span class="n">bp</span>

<span class="c1">### Retrieve a filtered catalogue as a Pandas DataFrame
</span><span class="n">df</span> <span class="o">=</span> <span class="n">bp</span><span class="p">.</span><span class="n">catalogue</span><span class="p">(</span><span class="n">dataset</span><span class="o">=</span><span class="s">'cmip5'</span><span class="p">,</span> <span class="n">Model</span><span class="o">=</span><span class="s">'HadGEM2-CC'</span><span class="p">,</span> 
                    <span class="n">RunID</span><span class="o">=</span><span class="s">'r1i1p1'</span><span class="p">,</span> <span class="n">Experiment</span><span class="o">=</span><span class="s">'historical'</span><span class="p">,</span> 
                    <span class="n">Var</span><span class="o">=</span><span class="p">[</span><span class="s">'tas'</span><span class="p">,</span> <span class="s">'pr'</span><span class="p">],</span> <span class="n">Frequency</span><span class="o">=</span><span class="s">'mon'</span><span class="p">)</span>

<span class="c1">### Iterate over rows in catalogue
</span><span class="k">for</span> <span class="n">index</span><span class="p">,</span> <span class="n">row</span> <span class="ow">in</span> <span class="n">df</span><span class="p">.</span><span class="n">iterrows</span><span class="p">():</span>
    <span class="n">ds</span> <span class="o">=</span> <span class="n">bp</span><span class="p">.</span><span class="n">open_dataset</span><span class="p">(</span><span class="n">row</span><span class="p">)</span> <span class="c1">### In Xarray
</span>    <span class="n">cubes</span> <span class="o">=</span> <span class="n">bp</span><span class="p">.</span><span class="n">get_cube</span><span class="p">(</span><span class="n">row</span><span class="p">)</span>  <span class="c1">### Or... In Iris
</span></code></pre></div></div>

<h2 id="notebooks">Notebooks</h2>

<p>Here are some Python notebooks I use for research and teaching. Please feel free to get in touch if you have any comments, <em>even if just to say you found them useful</em></p>

<h3 id="getting-started">Getting started</h3>
<ul>
  <li>Using <a href="/notebooks/baspy_using_xarray"><strong>BASpy</strong> with <strong>Xarray</strong></a> to read in climate model data (CMIP5)</li>
  <li>Getting weather station data from around the globe (both <a href="/notebooks/ghcn_monthly">monthly</a> and <a href="/notebooks/ghcn_daily">daily</a> averaged data)</li>
</ul>

<h3 id="research">Research</h3>
<ul>
  <li>Automatic detection of low pressure systems from pressure or geopotential height fields. Used here in this example to detect the <a href="/notebooks/asl_detection"><em>Amundsen Sea Low</em></a></li>
  <li>Analysing simulated Antarctic preciptation from the <a href="/notebooks/racmo_with_xarray">RACMO regional climate model</a></li>
  <li>Working with model output from the the <a href="/notebooks/wrf_with_xarray">WRF regional climate model</a></li>
</ul>

<h3 id="useful-scripts">Useful scripts</h3>
<ul>
  <li>Smoothing a timeseries <a href="/notebooks/smooth_timeseries">using a low-pass filter</a></li>
</ul>

<p><sub><em>I have other notebooks <a href="https://nbviewer.jupyter.org/github/scott-hosking/notebooks/tree/master/">here</a> which I may or may not migrate over time to this site</em></sub></p>
:ET